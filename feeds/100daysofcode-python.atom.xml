<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Archer Imagine - #100DaysOfCode, python</title><link href="http://archerimagine.com/" rel="alternate"></link><link href="http://archerimagine.com/feeds/100daysofcode-python.atom.xml" rel="self"></link><id>http://archerimagine.com/</id><updated>2019-02-26T22:46:52+05:30</updated><entry><title>100Days of Code Log File 2nd Attempt</title><link href="http://archerimagine.com/articles/100daysofcode-python/100Days-of-code-log-file_V_2_0.html" rel="alternate"></link><published>2019-02-15T22:42:30+05:30</published><updated>2019-02-26T22:46:52+05:30</updated><author><name>Animesh Bhadra</name></author><id>tag:archerimagine.com,2019-02-15:/articles/100daysofcode-python/100Days-of-code-log-file_V_2_0.html</id><summary type="html">&lt;p&gt;Hello World!, You are about the witness the second coming of an epic 100-Day coding journey, A story that great sages will pass down from generation to generation. This quest will feature a potpourri of unfiltered joy, unrivaled pain, and unexpected epiphanies.&lt;/p&gt;</summary><content type="html">
&lt;p&gt;&lt;img alt="Motivational Quotes" src="http://archerimagine.com/images/100DaysOfCode/100DaysCode_Quotefancy.jpg" title="life always offers you a second chance. is called tomorrow, by Dylan Thomas"/&gt;&lt;/p&gt;
&lt;p&gt;Hello World!, You are about the witness the beginning of an epic second coming of the 100-Day coding journey, A story that great sages
will pass down from generation to generation. This quest will feature a potpourri of unfiltered joy, unrivaled pain, and 
unexpected epiphanies.&lt;/p&gt;
&lt;p&gt;Some moments, I will be the smartest man alive. Others moments, I will be a stupid idiot. But each day, I will be a valiant warrior, fighting to develop and perfect the skills necessary to evolve into a true beast with these keys.&lt;/p&gt;
&lt;p&gt;I have failed in my previous attempt for the challenge, which you can find &lt;a href="http://archerimagine.com/articles/100daysofcode/100Days-of-code-log-file.html" title="First attempt for 100Daysofcode"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are learning from the previous failure, here are the modification which was done to the challenge according to my handicap.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Selected the resource in advance, &lt;ul&gt;
&lt;li&gt;&lt;a href="https://teamtreehouse.com/tracks/learn-python"&gt;Learn Python Track from Team TreeHouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLB2BE3D6CA77BB8F7"&gt;MIT 6.00SC Introduction to Computer Science and Programming &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Practice the 100Daysofcode for a month before committing fully.&lt;/li&gt;
&lt;li&gt;Create a time table and sticking to it.&lt;/li&gt;
&lt;li&gt;Studying at the same time everyday, brains craves for learning python in that hour of the day.&lt;/li&gt;
&lt;li&gt;Missing few (~5) days is acceptable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ladies and gentleman, I present to you, #100DaysofCode with @ &lt;a href="https://twitter.com/animeshkbhadra" title="Twitter Handle"&gt;animeshkbhadra &lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="day-05-tuesday-26-february-2019"&gt;Day 05 | Tuesday 26 February 2019&lt;a class="headerlink" href="#day-05-tuesday-26-february-2019" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="days-progress"&gt;Days Progress&lt;a class="headerlink" href="#days-progress" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;There was a gap of 3 days.&lt;/li&gt;
&lt;li&gt;Started the &lt;a href="https://teamtreehouse.com/library/dates-and-times-in-python"&gt;Date and Time&lt;/a&gt; module.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="thoughts"&gt;Thoughts&lt;a class="headerlink" href="#thoughts" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;This course teaches about the date and time module of Python.&lt;/li&gt;
&lt;li&gt;Major modules in &lt;code&gt;datetime&lt;/code&gt; are&lt;ul&gt;
&lt;li&gt;&lt;code&gt;date&lt;/code&gt;, &lt;code&gt;datetime&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;timedelta&lt;/code&gt;, &lt;code&gt;timezone&lt;/code&gt;, &lt;code&gt;tzinfo&lt;/code&gt;- which is rarely used directly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Learned about &lt;code&gt;.today()&lt;/code&gt;, &lt;code&gt;.combine()&lt;/code&gt;, &lt;code&gt;.timestamp()&lt;/code&gt; -  which returns the epoch time.&lt;/li&gt;
&lt;li&gt;We can format the time with help from &lt;code&gt;strftime()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can create time with string format &lt;code&gt;strptime()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="link"&gt;link to tweet&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="day-04-friday-22-february-2019"&gt;Day 04 | Friday 22 February 2019&lt;a class="headerlink" href="#day-04-friday-22-february-2019" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="days-progress_1"&gt;Days Progress&lt;a class="headerlink" href="#days-progress_1" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Completed the course &lt;a href="https://teamtreehouse.com/library/write-better-python"&gt;TreeHouse | Write Better python &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Received the badge Clean Code Badge&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Python Clean Code Badge " src="http://archerimagine.com/images/100DaysOfCode/python_cleancode.png" title="Python Clean Code Badge"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In addition completed the Write Better python Course of the Learn Python track.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Write Better Python " src="http://archerimagine.com/images/100DaysOfCode/writeBetterPython.png" title="Write Better Python"/&gt;&lt;/p&gt;
&lt;h3 id="thoughts_1"&gt;Thoughts&lt;a class="headerlink" href="#thoughts_1" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This course taught about:-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PEP-8 Coding style guide.&lt;/li&gt;
&lt;li&gt;PEP-20 which is the Zen of python, can be accessed using &lt;code&gt;import this&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;PEP-257 for docstrings&lt;ul&gt;
&lt;li&gt;DocString which can fit one line should.&lt;/li&gt;
&lt;li&gt;DocString that cannot, put the closing triple quote on their own line.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Logging Module of python&lt;ul&gt;
&lt;li&gt;6 Logs levels, &lt;code&gt;CRITICAL&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;NOTSET&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python Debugger &lt;code&gt;pdb&lt;/code&gt;, can be invoked by calling &lt;code&gt;import pdb; pdb.set_trace()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://twitter.com/animeshkbhadra/status/1098994918071156737"&gt;link to tweet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="day-03-thursday-21-february-2019"&gt;Day 03 | Thursday 21 February 2019&lt;a class="headerlink" href="#day-03-thursday-21-february-2019" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="days-progress_2"&gt;Days Progress&lt;a class="headerlink" href="#days-progress_2" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I completed the &lt;a href="https://teamtreehouse.com/library/objectoriented-python-2"&gt;Object Oriented Python course &lt;/a&gt;. With this I have also received the badge.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Object Oriented Python Badge." src="http://archerimagine.com/images/100DaysOfCode/OOPython.png" title="Object Oriented Python Badge"/&gt;&lt;/p&gt;
&lt;h3 id="thoughts_2"&gt;Thoughts&lt;a class="headerlink" href="#thoughts_2" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Today completed the project Dice Roller.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I am still not confident in some part of Object Oriented Python, will soon polish it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://twitter.com/animeshkbhadra/status/1098633238963240961"&gt;link to tweet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="day-02-wednesday-20-february-2019"&gt;Day 02 | Wednesday 20 February 2019&lt;a class="headerlink" href="#day-02-wednesday-20-february-2019" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="days-progress_3"&gt;Days Progress&lt;a class="headerlink" href="#days-progress_3" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Today I just watched the first lecture from MIT OCW's &lt;a href="https://www.youtube.com/watch?v=bX3jvD7XFPs&amp;amp;list=PLB2BE3D6CA77BB8F7&amp;amp;index=2&amp;amp;t=0s"&gt;MIT 6.00SC Introduction to Computer Science and Programming &lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is a great lecture by &lt;a href="https://people.csail.mit.edu/guttag/"&gt;John Guttag &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am alternating between &lt;a href="https://teamtreehouse.com/tracks/learn-python"&gt;Learn Python Track from Team TreeHouse&lt;/a&gt; and &lt;a href="https://www.youtube.com/playlist?reload=9&amp;amp;list=PLB2BE3D6CA77BB8F7"&gt;MIT 6.00SC Introduction to Computer Science and Programming &lt;/a&gt;&lt;/p&gt;
&lt;h3 id="thoughts_3"&gt;Thoughts&lt;a class="headerlink" href="#thoughts_3" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Lecture 1 of MIT 6.00SC Introduction to Computer Science and Programming taught me about:-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Declarative and Imperative Knowledge.&lt;/li&gt;
&lt;li&gt;Algorithms&lt;/li&gt;
&lt;li&gt;Fixed program and stored program computers&lt;/li&gt;
&lt;li&gt;Programming Language&lt;ul&gt;
&lt;li&gt;Syntax&lt;/li&gt;
&lt;li&gt;Static Semantics&lt;/li&gt;
&lt;li&gt;Semantics.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Types of errors&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compiled Vs Interpreted Language &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://twitter.com/animeshkbhadra/status/1098272030032572416"&gt;Link To Tweet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="day-01-tuesday-19-february-2019"&gt;Day 01 | Tuesday 19 February 2019&lt;a class="headerlink" href="#day-01-tuesday-19-february-2019" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="days-progress_4"&gt;Days Progress&lt;a class="headerlink" href="#days-progress_4" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I am learning Python from the learn python track of &lt;a href="https://teamtreehouse.com/tracks/learn-python"&gt;TreeHouse&lt;/a&gt;. I started this course, some days back, from now, will post regularly on behalf of #100DaysOfCode.&lt;/p&gt;
&lt;p&gt;Today I have completed the Advanced Object Badge.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Advance Object TreeHouse Badge." src="http://archerimagine.com/images/100DaysOfCode/python.png" title="Advance Object TreeHouse Badge."/&gt;&lt;/p&gt;
&lt;h3 id="thoughts_4"&gt;Thoughts&lt;a class="headerlink" href="#thoughts_4" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Today I learned about:-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@property&lt;/code&gt; : This decorator is used to convert a class method into a class property.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@property.setter&lt;/code&gt; : This decorator is used to make the method set a class property.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;@classmethod&lt;/code&gt; : This is a decorator which takes a function as input works on it and returns another function as output.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://twitter.com/animeshkbhadra/status/1097923646327345153"&gt;Link to Tweet&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr/&gt;
&lt;h2 id="reference"&gt;Reference&lt;a class="headerlink" href="#reference" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://quotefancy.com/quote/970132/Dylan-Thomas-Life-always-offers-you-a-second-chance-is-called-tomorrow"&gt;QuoteFancy | Image Source &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.100daysofcode.com/"&gt;100DaysOfCode Official Website &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://teamtreehouse.com/tracks/learn-python"&gt;Learn Python Track from Team TreeHouse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLB2BE3D6CA77BB8F7"&gt;MIT 6.00SC Introduction to Computer Science and Programming &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nealschaffer.com/tweet-link-preview-image-twitter/"&gt;Create a Tweet With image Preview for Free &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="#100DaysOfCode"></category><category term="#100DaysOfX"></category><category term="Python"></category></entry></feed>